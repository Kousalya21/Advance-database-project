
Name: Yash Bardapurkar  
Last 4 digits ID: 1650
Computer IP address:
CSE 6331, Cloud Computing					


Quiz Q4, 3.30, Summer 2019   (c) DL, UTA, 2019


  C&P means cut and paste only those relevant lines from your program(s) into this quiz.


 1.  I understand that I am on my honor during this quiz, I will not collaborate, use 
     non-allowed sources, and I will not discuss or share this quiz with anyone for the next 
     12 hours.
     You MAY: use Google to search, use previous source code, 
     YOU MAY NOT use:
     Email, Facebook, Hangouts, IM, chats, Skype or ANY other human connection.

     This is a timed test. Late tests will have points deducted for being late.
     Very late tests will not be graded.

     When you are complete, with any part, please raise your hand, so we may visually inspect that part.

     The second part of the test, you should electronically submit, you will need to copy and paste 
     only those lines of code to implement that part of the test, usually a few (two to eight) lines of code. 
     Place it immediately after the question.

     Submit this Quiz (renamed) with code cut and pasted, ONLY text. DO NOT submit zips, binaries, libraries,
     or anything other than text.

     When any parts(questions) are complete complete, submit this test, you may make multiple submissions.

     If you have computer, or other, problems, please raise your hand immediately.

     If you understand and agree, please initial here:
     YB
     _________________

 2. Get files from this same folder.
   
 3. Name your program/submission with your name and last digits of your ID.

 4. Using the cloud services provider, all functionality possible should be implemented on that provider.
    (Of course, displaying web pages through a browser and the user interface is "local")
    The cloud service provider is MS Azure.

 4+ In order to give as many people the opportunity to demo in the last few minutes, you may only demo ONE Question in the
    last 5 minutes of the quiz time or for the few minutes afterward. 
  
Show and submit code, when each part is complete, raise your hand and then show us:

 5. Upload the .csv data file to cloud service. Once it is in the cloud service you will import it into
    SQL tables, created and indexed as necessary (for the following parts).
    The voting (.csv) are the states (in alphabetical order, from Alabama to Wyoming, 
    including Washington DC), total state population, voting population, number registered voters, 
    the number who actually did vote, all in thousands (the values have 000 appended at the end).
    Please create SQL tables with the information in the dataset.
    Show a web page and interface (which resides on the cloud provider) with your student ID followed by your
    last name then comma then first name (as it appears on your student ID), in large font at the top of every web page displayed 
    (for this quiz)
    On the same web page show the names of all states with a total population between 5 to 10 million and 
    then between 10 million and 50 million.


@app.route('/prob5', methods=["POST"])
def prob5():
    sql = "SELECT StateName from voting where TotalPop between ? and ?"
    cursor = connect.cursor()
    cursor.execute(sql, (1000, 5000))

    result1 = cursor.fetchall()

    sql = "SELECT StateName from voting where TotalPop between ? and ?"
    cursor = connect.cursor()
    cursor.execute(sql, (5000, 10000))

    result2 = cursor.fetchall()

    return render_template('prob5.html', result1=result1, result2=result2)



<h1>1001731650</h1>
<h1>Bardapurkar, Yash</h1>
<br>

<h1>5)</h1>
States with Total Polulation between 1M and 5M:<br>
{% for item in result1 %}
{{ item[0] }}<br>
{% endfor %}
<br>

States with Total Polulation between 5M and 10M:<br>
{% for item in result2 %}
{{ item[0] }}<br>
{% endfor %}
<br>

 6. Show a pie chart for percent voted, that is, total population/voted (2nd column divided by last column)
    from  to 40 to 80 percent in groups of N percent, where we will give you N in a web form, 
    (for example if N is 20, then 40 to 60 percent, 60 to 80 percent), where each pie section will show how many states 
    are in that group. Please show the pie sections in different colors and put the label (that is the group, for example,
    "40-60", "60-80") outside the pie section and the pie part size (that is the number of states, or the percent of states,
    inside that pie section.) The pie chart should be between 70% and 95% of the width of your display.



@app.route('/prob6', methods=["POST"])
def prob6():

    step = float(int(request.form['step'])/100)

    start = 0.4
    end = 0.8

    temp = start
    result = []
    while temp < end:
        sql = "SELECT count(*) from voting where Voted/TotalPop between ? and ?"
        cursor = connect.cursor()
        cursor.execute(sql, (temp, round(min([temp + step, end]), 4 )))

        for item in cursor.fetchall():
            result.append([ str(temp) + ' to ' +  str(round(min([temp + step, end]), 4)) + ' %', item[0]])

        temp = temp + step

    print(result)
    
    return render_template('prob6.html', result=result)


<h1>1001731650</h1>
<h1>Bardapurkar, Yash</h1>
<br>

<h1>6)</h1>

<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
        google.charts.load('current', {'packages':['corechart']});
        google.charts.setOnLoadCallback(drawChart);

        function drawChart() {
            var pieData = google.visualization.arrayToDataTable([
                ['Percentage range', 'Number of States'],
                {% for row in result %}
                [ '{{ row[0] }}' , {{ row[1] }} ],
                {% endfor %}
                ])
            var pieOptions = {
                title: 'States by Voting percentage',
                width: 1200,
            };
            var pieChart = new google.visualization.PieChart(document.getElementById('piechart'));
            pieChart.draw(pieData, pieOptions);

        }

</script>

<div id="piechart" style="width: 1000px; height: 700px;"></div>

 7. For the formula x=y*y+1 (that is, x = y squared plus 1), for the values of y between N1 and N2, where y is an integer,
    please show a point chart or a scatter chart. The x axis should be horizontal, and the y vertical. 
    The axis (or all points) should be labeled with values. The user will give the values of N1 and N2, the increment is always 1.
    (For example, N1 might be 1, and N2 is 4, so the values for y, will be 1, 2, 3, and 4, the corresponding x are 2, 5, 10, 17)
    The axis should be labeled, and the plot should occupy between 70% and 95% of the width of your display.

@app.route('/prob7', methods=["POST"])
def prob7():

    n1 = int(request.form['n1'])
    n2 = int(request.form['n2'])

    step = 1

    result = []
    max_x = 0

    temp = n1
    while temp <= n2:
        x = temp * temp + 1
        result.append([x, temp])
        temp = temp + step
        max_x = x

    max_y = len(result)

    return render_template('prob7.html', result=result, max_x=max_x, max_y=max_y)


<h1>1001731650</h1>
<h1>Bardapurkar, Yash</h1>
<br>
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">
        google.charts.load('current', {'packages':['corechart']});
        google.charts.setOnLoadCallback(drawChart);

        function drawChart() {

            var data = google.visualization.arrayToDataTable([
                ['X', 'Y'],
                {% for item in result %}
                [ {{ item[0] }} , {{ item[1] }} ],
                {% endfor %}
                ]);

            var options = {
                title: 'Plot of X vs Y',
                width: 1200,
                hAxis: {
                    title: 'X', minValue: -1, maxValue: {{ max_x + 1 }},
                },
                vAxis: {
                    title: 'Y', minValue: -1, maxValue: {{ max_y + 1 }},
                },
                legend: 'none'
            };

            var chart = new google.visualization.ScatterChart(document.getElementById('chart_div'));

            chart.draw(data, options);
        }
    </script>

<div id="chart_div" style="width: 900px; height: 500px;"></div>



 8. Create a vertical bar graph that shows the total registered for all states (ie, the number of states) for in groups of N
    (millions), (for example if N is 10, then 1 to 10 million, 10 to 20 million, 20 to 30 million, etc)
    The bars should be labeled, and the chart should occupy between 70% and 95% of the width of your display,
    show legend (amounts) inside each bar.



@app.route('/prob8', methods=["POST"])
def prob8():

    sql = "SELECT StateName, Registered from voting"
    cursor = connect.cursor()
    cursor.execute(sql)

    result = cursor.fetchall()
    print(result)

    return render_template('prob8.html', result=result)


<html>
  <head>
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
      google.charts.load("current", {packages:["corechart"]});
      google.charts.setOnLoadCallback(drawChart);
      function drawChart() {
        var data = google.visualization.arrayToDataTable([
          ['States', 'Registered Voters'],
          {% for row in result %}
            [ '{{ row[0] }}' , {{ row[1] }} ],
            {% endfor %}
          ])

        var options = {
          title: 'Lengths of dinosaurs, in meters',
          width: 1200,
          histogram: { bucketSize: 1000 },
        hAxis: {
          title: 'Population'
        },
        vAxis: {
          title: 'States'
        },
          legend: { position: 'none' },
        };

        var chart = new google.visualization.Histogram(document.getElementById('chart_div'));
        chart.draw(data, options);
      }
    </script>
  </head>
  <body>
    <h1>1001731650</h1>
<h1>Bardapurkar, Yash</h1>
<br>
    <h1>8)</h1>
    <div id="chart_div" style="width: 900px; height: 500px;"></div>
  </body>
</html>

 
 9. Show GTA parts 5, 6, 7, 8

 10. When complete, return (send) this quiz
     If you finish early, send this immediately, otherwise send between
     the end of class and no more than 1 minute after that.
